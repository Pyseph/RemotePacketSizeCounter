"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[409],{13533:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetPacketSize","desc":"Returns the byte size of a packet from the given data. If `IgnoreRemoteOffset` is true, the remote overhead will not be added to the total.","params":[{"name":"CounterData","desc":"","lua_type":"{\\r\\n\\tIgnoreRemoteOffset: boolean?,\\r\\n\\tPacketData: {any}\\r\\n}"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":149,"path":"src/init.luau"}},{"name":"GetDataByteSize","desc":"Returns the byte size of a single data object type. Supports most types.","params":[{"name":"Data","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":163,"path":"src/init.luau"}}],"properties":[{"name":"RemoteOverhead","desc":"The byte overhead of a remote event, in bytes.","lua_type":"number","readonly":true,"source":{"line":139,"path":"src/init.luau"}},{"name":"TypeOverhead","desc":"The byte overhead of a type, in bytes.","lua_type":"number","readonly":true,"source":{"line":144,"path":"src/init.luau"}}],"types":[],"name":"PacketSizeCounter","desc":"The main class for calculating the size of packets.","source":{"line":133,"path":"src/init.luau"}}')}}]);